What does this technology (library/framework/service) accomplish for you?

Flask accomplishes the bulk of the TCP/HTTP work on our server, parsing and sending responses for both GET and POST request.
It also handles most of our html templating using the the Jinja2 style templates.

----------------------------------------------------------------------------------------------------------------------------------------------------------------

How does this technology accomplish what it does?

We implement the following functions/methods from the flask library:

.route()

  this method invokes add_url_rule() which links a url with a specified path with the function directly after the request route request.
  
  add_url_rule() responds to an incoming GET request at the specified path by registeting a rule, and then calls the specified function. Everytime this path is     requested in the future, the linked function will be called (https://github.com/pallets/flask/blob/master/src/flask/scaffold.py). 
  
  by default after_this_request() is called to link the specified URL with the function directly after route()                                                     (https://github.com/pallets/flask/blob/master/src/flask/ctx.py).
  
render_template()
  Calls _render on the specified template, and then calls the Jinja2 function render(). Signals are sent before and after the template is rendered and the         rendered template is returned. Finally an HTTP response is issued using the rendered template. (https://github.com/pallets/flask/blob/master/src/flask/templating.py)
  
  render() replaces the designated variable in the template with the deignated variables.                                                                           (https://github.com/pallets/jinja/blob/master/src/jinja2/environment.py)
  (https://jinja.palletsprojects.com/en/2.11.x/api/)
  
  **Flask uses context which works like a stack where the top level contains active requests and lower levels to hold these variables.
    (https://flask.palletsprojects.com/en/0.12.x/reqcontext/)
  
request.args.get()
  Parses the query string in the URL and returns the value of the designated string. (https://flask.palletsprojects.com/en/1.1.x/api/#flask.Request.args)
  
 url_for()
  Gets the url for the specified html file. (https://github.com/pallets/flask/blob/master/src/flask/helpers.py#L192)
  
 redirect()
  Calls werkzeug RequestRedirect. (https://github.com/pallets/werkzeug/blob/18166bfd5b38b1775dbed383a1067ae92db86782/src/werkzeug/routing.py#L265) Which in turn calls reditect() which sends an HTTP redirect response to the designated url. (https://github.com/pallets/werkzeug/blob/18166bfd5b38b1775dbed383a1067ae92db86782/src/werkzeug/utils.py#L525)
  
 flash()
  Adds a message to the session flashed messages. These messages can then be retreived and added to an HTML file using {{ get_flashed_messages }},
  and a Jinja2 for loop to add all messages. flash can also take an addition aparameter to designate different kinds of messages for example 'accept'
  and 'error'. (https://github.com/pallets/flask/blob/master/src/flask/helpers.py)

----------------------------------------------------------------------------------------------------------------------------------------------------------------

What license(s) or terms of service apply to this technology?

Flask operates under a three clause BSD clause to quote the official documentation this roughly means: "do whatever you want with it as long as the copyright 
in Flask sticks around, the conditions are not modified and the disclaimer is present. Furthermore you must not use the names of the authors to promote 
derivatives of the software without written consent."

To further clarify this means that Flask is freely available to use, however one cannot redistribute Flask source code, binary forms, or documentation without
maintating the following copyright notice: "Copyright (c) 2015 by Armin Ronacher and contributors". Since we will not be redistributing any Flask Source Code
this wont affect our project.

Additionally, we cannot use the names of the authors to promote our product without permission from the author themself. Again, since we will not be promoting
our web app this does not apply to our project.
